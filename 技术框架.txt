git教程:http://blog.csdn.net/eliot2877/article/details/77841226
1.npm init
2.npm i --save express
// bodyParser:解析POST请求数据
   cookies：读/写cookie
   swig：模板解析引擎
   mongoose：操作mongodb数据
   markdown：用markdown语法解析生成模块 
/*
一个是npm install--save另一个是 npm install –save-dev，他们表面上的区别是--save 会把依赖包名称添加到 package.json 文件 dependencies 键下，--save-dev 则添加到 package.json 文件 devDependencies 键下。
npm自己的文档说dependencies是运行时依赖，devDependencies是开发时的依赖。即devDependencies 下列出的模块，是我们开发时用的，比如 我们安装 js的压缩包gulp-uglify 时，我们采用的是 “npm install –save-dev gulp-uglify ”命令安装，因为我们在发布后用不到它，而只是在我们开发才用到它。dependencies 下的模块，则是我们发布后还需要依赖的模块，譬如像jQuery库或者Angular框架类似的，我们在开发完后后肯定还要依赖它们，否则就运行不了。
*/
3.目录结构
  db              【文件夹】            数据库存储目录
  models          【文件夹】            数据库模型文件目录
  node_modules    【文件夹】            node第三方模块目录
  public          【文件夹】            公共文件目录（css js image）
  routers         【文件夹】            路由文件目录
  schemas         【文件夹】            数据库结构文件（schema）目录
  views           【文件夹】            模板视图文件目录
  app.js           【文件】             应用启动入口文件
  package.json     
4.编写app.js入口文件
  路由绑定：通过app.get()或app.post()等方法吧一个url路径和一个或n个函数进行绑定
    app.get('/',function(req,res,next){
      req:request对象-客户端请求的数据
      res:response对象-服务器输出对象，提供了一些服务器端输出相关的一些方法
      next： 方法用于执行下一个和路径匹配的函数（一个路径可以绑定多个函数） next是一个函数
    })
  内容输出
    通过res.send(string)发送内容到客户端
5.使用模板（实现前后端分离）
模板配置：var swig = require('swig')
          app.engine('html',swig.renderFile);
          ......在js中体现

6.模块划分
      前台模块
      后台管理模块
      API模块

7.下载并启动数据库
终端：cd c:\Program Files\MongoDB\Server\3.4\bin
      mongod --dbpath=C:\Users\Administrator\Desktop\知识梯级\node.js\node20180102\blog_project\db --port=27018
下载并启动MongoDB可视化工具RoboMongo
8.常见的四种Content-Type类型：
application/x-www-form-urlencoded 常见的form提交
multipart/form-data 文件提交
application/json 提交json格式的数据
text/xml 提交xml格式的数据